# Напишите программу, которая принимает на вход цифру, 
# обозначающую день недели, и проверяет, является ли этот день выходным.

num = int(input('Введите число: '))


day = lambda x: 'Выходной' if x > 5 else 'Будний'
print(day(num))

# Напишите программу, которая принимает на вход координаты точки (X и Y), 
# причём X ≠ 0 и Y ≠ 0 и выдаёт номер четверти плоскости, в которой находится 
# эта точка (или на какой оси она находится).

# Пример:

# - x=34; y=-30 -> 4
# - x=2; y=4-> 1
# - x=-34; y=-30 -> 3

x = int(input('Введите значение координаты X: '))
y = int(input('Введите значение координаты Y: '))
num_quarter = lambda x,y: 1 if x > 0 and y > 0 else 2 if x < 0 and y > 0 else 3 if x < 0 and y < 0 else 4
print(f'Точка лежит в {num_quarter(x, y)} координатной четверти')

# Напишите программу, которая по заданному номеру четверти, 
# показывает диапазон возможных координат точек в этой четверти (x и y).

num = int(input('Введите номер черверти: '))
a, b, c, d = 'x > 0; y > 0', 'x < 0; y > 0', 'x < 0; y < 0', 'x > 0; y < 0'
range_cord = lambda x: a if 1 in x else b if 2 in x else c if 2 in x else d
print(range_cord(num))

# Напишите программу, которая принимает на вход вещественное число и показывает сумму его цифр.
# Пример:
# 6782 -> 23
# 0,56 -> 11

number = input('Введите вещественное число: ').split('.')
res = sum(list(map(int, number[0] + number[-1])))
print(res)

# В заданном списке разделите элементы содержащие буквы и цифры

my_list = [12,'sadf',5643, 'fvdf', 'sdvz', 1236]

numbers = list(filter(lambda x: str(x).isdigit(), my_list))
letters = list(filter(lambda x: not str(x).isdigit(), my_list))

print(f'Цифры: {numbers} \nБуквы: {letters}')

# Задайте список из n чисел последовательности (1 + 1/n)**5, 
# выведеите его на экран, а так же сумму элементов списка.
# Пример:
# Для n=4 -> [2, 2.25, 2.37, 2.44]
# Сумма 9.06

n = int(input('Введи N: '))
my_n = [round((1 + 1/i)**i, 2) for i in range(1, n + 1)]
print(f'Для N = {n}:', my_n)
print(f'Сумма {sum(my_n)}')

# Задайте список из нескольких чисел. Напишите программу, 
# которая найдёт сумму элементов списка, стоящих на позиции с нечетным индексом.
# Пример:
# [2, 3, 5, 9, 3] -> на нечётных позициях элементы 3 и 9, ответ: 12

my_list = [my_list[i] for i in range(1, len(my_list), 2)]
print(sum(my_list))
